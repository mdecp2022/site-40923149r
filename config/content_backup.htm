<h1>About</h1>
<p>GitHub:<a href="https://github.com/mdecp2022/site-40923149r">40923149r</a></p>
<p>cmsite: wcms use <a href="https://github.com/mdecycu/cmsimde">https://github.com/mdecycu/cmsimde</a> as submodule</p>
<h1>HW</h1>
<h2>W5</h2>
<p><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/fd0e15acb505027950a9765a0ca23525/raw/43eb550717cd54bf72524dc343b8c2dd351c179d/w5">Password</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 導入亂數模組
import random
# 導入字串模組
import string
# 利用 def 關鍵字定義函式
# 函式的輸入變數可以設定初始值
def password_generator(size=4, chars=string.ascii_lowercase + string.digits):
    # 函式內以多行註解說明函式功能
    """Generate random password
    """
    # 利用 return 關鍵字將所產生的亂數字串傳回
    return ''.join(random.choice(chars) for _ in range(size))
# 建立一個變數與隨後的字串對應
pass_string = "abcdefghkmnpqrstuwxyz123456789"
# 利用重複迴圈呼叫 password_generator() 函式 10 次
for i in range(10):
    print(password_generator(4, pass_string))</pre>
<h2>W6</h2>
<div>
<div>請將<a href="https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/035d6948a233beceba7a7974eef0a0a4ef9c17e9/cp1b_2022_random_draw.py" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/035d6948a233beceba7a7974eef0a0a4ef9c17e9/cp1b_2022_random_draw.py">抽點程式</a>與<a href="https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/035d6948a233beceba7a7974eef0a0a4ef9c17e9/cp2022_w6b_gen_pages_link.py" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://gist.githubusercontent.com/mdecycu/2c6323eff49b496d1bafd210f3ec9707/raw/035d6948a233beceba7a7974eef0a0a4ef9c17e9/cp2022_w6b_gen_pages_link.py">擷取個人靜態網頁</a>的程式結合，可以選定列出人數後，在頁面中顯示出該學員的靜態網頁連結。</div>
<div><span style="color: #ff0000;"><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/05a826db63c8321d6af43b4600e145fb/raw/7d33e260950fb3bfca012efa7f4b76902d8ae1a3/w6" style="color: #ff0000;">1a名單</a></span></div>
<div><span style="color: #000000;"><span style="color: #000000;"></span></span>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">from browser import document, html
  
brython_div1 = document["brython_div1"]
"""
brython_div1 &lt;= html.BUTTON("hello")
brython_div1 &lt;= html.BR()
brython_div1 &lt;= html.A("google", href="https://google.com")
"""
  
url = "https://mde.tw/studlist/2022fall/1a.txt"
data = open(url).read().split("\n")
mdecp2022 = "https://mdecp2022.github.io/site-"
data = data[1:-1]
for i in data:
    stud = i.split("\t")
    stud_num = stud[0]
    github_acc = stud[1]
    #print(stud_num, github_acc)
    if github_acc == "":
        github_acc = stud_num
    site = mdecp2022 + github_acc
    link = html.A(stud_num, href=site)
    brython_div1 &lt;= link
    brython_div1 &lt;= html.BR()</pre>
<span style="color: #000000;">心得:程式成功後，</span></div>
<div></div>
<h2>W7</h2>
<div>
<div>stud 伺服器與 cmsimde 子模組更新</div>
<div data-tid="messageBodyContainer">
<div data-tid="messageBodyContent">
<div><a href="https://stud.cycu.org:8000" title="https://stud.cycu.org:8000/">https://stud.cycu.org:8000</a> 是一個建立在工作站室電腦上的一個動態網站, 透過在 Ubuntu 伺服器上的一個 demo 帳號與兩個 ports (9000 及 8000) 完成, 2022 Fall 每位修課學員應該都收到一封信, 告知在這台 stud.cycu.org 伺服器上的獨一帳號密碼與 ports (<a href="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/ET-JZNPkNtZDhFiLt8BGZZ4BFMVV1HE73WQt1V44y6vnCQ?e=S1eVbz" title="https://nfuedu-my.sharepoint.com/:x:/g/personal/yen_nfu_edu_tw/et-jznpkntzdhfilt8bgzz4bfmvv1he73wqt1v44y6vncq?e=s1evbz">stud.cycu.org port 分配表)</a>, 其中 9xxx 用於內部而 8xxx 則用於外部.</div>
<div>stud.cycu.org 是用來取代 Replit 雲端應用程式服務, 設定完成後, 每位學員都能直接在瀏覽器中修改動態與 Github Pages 靜態網站的內容, 也能直接將各種練習編寫的 Brython 程式存在個人的 Gist, 然後導入動態或靜態網站中執行.</div>
<h2>W10</h2>
<p>HW2</p>
<div>如何修改程式, 可以輸出1、3、5、7、9?</div>
<div><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/476c258c4177ea74fbef0ace160ca5f9/raw/ce9e09bf9ff93383c6e5cb03b38df1dc41cef7c1/w10-hw2">原程式</a>:</div>
<div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">for i in range(1, 10, 1):
 print(i,end=" ")</pre>
</div>
<div>
<div></div>
<div><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/3ef5f69a5eaa6c1afc46f6776a275b44/raw/b2eba94d04347dc6179386dbbebfbac400e9abe4/w10-hw2-2">修改後的程式</a>:把<span>(1,10,1)改為</span><span>(1,10,2)，就可以輸出1、3、5、7、9</span></div>
<div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">for i in range(1, 10, 2):
 print(i,end=" ")</pre>
<span><br/></span></div>
<div></div>
</div>
<h2>W11</h2>
<div>
<div>w11 作業:</div>
<div>Q:請問 w11 週小考有幾人缺考?</div>
<div>A:<span style="color: #000000;">以下為 w10 缺考名單:</span></div>
<div><span style="color: #ff0000;">40823116、40823139、40823241、40923102、40923104、40923140、40923144、40923150、40923152、40923156、41123119、41123121、41123122、41123127、41123133、41123143、41123146、41123149、41123150、41123152、</span></div>
<div></div>
<div>Q:請問 w11 週小考平均分數多少?   </div>
<div>A:<span style="color: #ff0000;">平均22.27分</span></div>
<div> </div>
<div><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/960defeaa659cc0394fd776b5d4db1bf/raw/0d10e1e1a2ee322fa174f09c9b06645556cf6341/W11">小考結果</a></div>
<div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">import ast
 
# get stud_list first
 
def get_stud(c_name):
    courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}
    c = courses[c_name]
    url = "https://nfu.cycu.org/?semester=1111&amp;courseno=" + c + "&amp;column=True"
    data = open(url).read().split("\n")
    stud = data[:-1]
    return stud
     
cp_stud = get_stud("1a")
 
# get w10 quiz result
cp_w10_quiz_url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/9e8bf693a2805631aa12992db4d4f23e0f64e868/2022_1112_cp1a_w10_quiz.json"
 
def get_score(url):
    json_data = open(url).read()
    big_dict = ast.literal_eval(json_data)
    data = big_dict["body"]["testuser"]
    quiz_dict = {}
    for i in data:
        stud_id = data[i]["user_name"]
        stud_score = int(float(data[i]["total_score"]))
        quiz_dict[stud_id] = stud_score
    return quiz_dict
     
cp_quiz = get_score(cp_w10_quiz_url)
cp_abs = []
for stud in cp_stud:
    try:
        print(stud, cp_quiz[stud])
    except:
        # 缺考者沒有 quiz 成績
        print(stud, "缺")
        cp_abs.append(stud)
# 列出缺考名單
print("="*20)
print("以下為 w10 缺考名單:")
for stud in cp_abs:
    print(stud)</pre>
</div>
</div>
<h2>W12</h2>
<p><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/5b47616187e57e15e84e144cf3f56900/raw/d3f6936f2b3106a132631cccbba02a6d410219ac/w12_hw-1.py">ex1</a> Brython input() 使用範例(溫度)</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
print(type(user_input_temp))</pre>
<p>心得:打完程式後，推上倉儲後，只需輸入攝氏溫度值，程式就會幫你跑出華氏溫度值。</p>
<p><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/382b44b0b396242be95282d1079aa117/raw/122fa06e7e7506e4f6da2fe4c9d9baa5d81bfd12/w12_hw-2.py">ex2</a>  字串轉浮點數，之後再轉回字串</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
print(type(user_input_temp))
# 到這裡已知利用 input() 函式將傳回字串, 接著以 float() 將字串轉為浮點數
user_input_temp = float(user_input_temp)
# 因為攝氏溫度乘上 9/5 之後再加上 32 就可以得到對應的華氏溫度值
Fahrenheit = (user_input_temp*9/5) + 32
# 到這裡, Fahrenheit 資料型別為浮點數, 而 user_input_temp 在第 8 行也轉為浮點數
# 要將兩個浮點數與字串相加, 都必須透過 str() 轉為字串
print("攝氏 " + str(user_input_temp) + " 度, 等於華氏 " + str(Fahrenheit) + " 度.")</pre>
<p><span style="color: #ff0000;">心得</span>:若我點開連結，<span style="color: #ff0000;">輸入40</span>，接著就會跑出<span style="color: #ff0000;">攝氏 40度</span>，等於<span style="color: #ff0000;">華氏104度</span>。</p>
<p><img caption="false" height="295" src="/images/1222-5.png" width="500"/></p>
<p><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?=https://gist.githubusercontent.com/40923149r/5ec87fb47ed775a5892753ff5108b1b5/raw/82ee0ff36c1b5af3be8c7da8861494fe9dea13f7/w12_hw-3.py">ex3</a> 動態網頁中的 Brython 環境設置</p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">&lt;h3&gt;w12&lt;/h3&gt;
&lt;!-- 
在動態網站頁面中啟用 Brython 執行環境的用法, 請注意動態網站執行所在路徑
--&gt;
&lt;script src="/static/brython.js"&gt;&lt;/script&gt;
&lt;script src="/static/brython_stdlib.js"&gt;&lt;/script&gt;
&lt;!-- 啟動 Brython --&gt;
&lt;p&gt;
&lt;script&gt;// &lt;![CDATA[
window.onload=function(){
brython({debug:1, pythonpath:['/static/','/downloads/py/']});
}
// ]]&gt;&lt;/script&gt;
&lt;!-- 以下事先在頁面中加入 id="brython_div" 的 div 標註
之後可利用 Brython 的 document 模組與此 html 標註對應
--&gt;&lt;/p&gt;
&lt;div id="brython_div"&gt;&lt;/div&gt;
&lt;p&gt;
&lt;script type="text/python"&gt;// &lt;![CDATA[
from browser import html, document
# Brython 的 input() 可以接受輸入提示字串, 跳出瀏覽器輸入表單後, 將輸入內容以字串取回
user_input_temp = input("請輸入攝氏溫度值:")
# 接著列出 user_input_temp 變數的資料型別
# 但是在頁面中 Brython 的 print() 將會顯示在 log 而非頁面
print(type(user_input_temp))
# 這裡定義一個 brython_div 變數, 透過 document[] 與頁面中 id="brython_div" 的位置對應
brython_div = document["brython_div"]
# 看能不能直接將變數值字串列在標註 id 為 "brython_div" 的頁面位置
brython_div &lt;= user_input_temp
# 之後若要列出 html, 則需要透過 Brython 的 html 模組
// ]]&gt;&lt;/script&gt;
&lt;/p&gt;</pre>
<p></p>
<h2>W13</h2>
<p><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/45ca2fc913e0790ac18cd712db2a3bc2/raw/6ead7dcec1623da77003c3a5c6a74d96ad364a28/w13_temperature_1">溫度1</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
f = c*9/5 + 32
c = (f-32)*5/9
'''
c = input("請輸入攝氏溫度值")
c = float(c)
print(c, type(c))</pre>
<p><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/4a4e78e0bceab738634974e41b282e94/raw/cfbd4074811aa0d5239dac7815cd34173ea123d4/w13_temperature_2">溫度2</a></p>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false">'''
f = c*9/5 + 32
c = (f-32)*5/9
'''
c = input("請輸入攝氏溫度值")
c = float(c)
#print(c, type(c))
f = c*9/5 + 32
print(c, f)</pre>
<p>心得:在跳出的視窗輸入你需要的攝氏溫度(30)，下方就會跑出轉換後的華氏溫度(86)。</p>
<p><img alt="" height="283" src="/images/1229-1.png" width="500"/></p>
<p><img alt="" height="283" src="/images/1229-2.png" width="500"/></p>
<p>Question:</p>
<p>Q1.何謂 Brython 程式環境?</p>
<p>A1.</p>
<p>一般來說， linux based 的電腦中會安裝好系統自帶的 Python。不過這可能會有幾個問題出現，所以，身為一個開發者來說，我們會想要讓我們的環境上可以支援不同的 Python 版本，每個專案也有<span style="color: #ff0000;">擁有自己的套件環境</span>。專案環境彼此獨立，開發也不容易出現互相干擾衝突的情況。網路上有許多解決方案。</p>
<p>Q2.如何編寫單位轉換程式?</p>
<p>A2.單位轉換程式就是老師有講解到的(攝氏溫度轉換成華氏溫度)</p>
<p class="pw-post-body-paragraph jj jk hi jl b jm jn ij jo jp jq im jr js jt ju jv jw jx jy jz ka kb kc kd ke hb bi" data-selectable-paragraph="" id="53d1">Python 的內建型態主要分為以下三種：</p>
<p class="pw-post-body-paragraph jj jk hi jl b jm jn ij jo jp jq im jr js jt ju jv jw jx jy jz ka kb kc kd ke hb bi" data-selectable-paragraph="">1.數值型態：<code class="dt kp kq kr ks b">int, float, bool</code></p>
<p class="pw-post-body-paragraph jj jk hi jl b jm jn ij jo jp jq im jr js jt ju jv jw jx jy jz ka kb kc kd ke hb bi" data-selectable-paragraph="">2.字串型態：<code class="dt kp kq kr ks b">str, chr</code></p>
<p class="pw-post-body-paragraph jj jk hi jl b jm jn ij jo jp jq im jr js jt ju jv jw jx jy jz ka kb kc kd ke hb bi" data-selectable-paragraph="">3.容器型態：<code class="dt kp kq kr ks b">list, dict, tuple</code></p>
<p><span>Python 中有數值、字串與字元的資料型別，以及不同型別之間的轉換方式</span></p>
<p><span>在Python中，一個字串的資料，是用兩個單引號或兩個雙引號括起來的</span></p>
<p><span>字元就是組成字串的元素</span></p>
<p><span>要轉換就需要用到布林值，布林值通常是一個運算的結果。</span></p>
<p>Q3.如何將在近端編寫的程式儲存至個人的 Gist 區域? 如何引用 Gist 程式?</p>
<p>A3.</p>
<p>Q4.如何將近端的動態與靜態網站內容, 以 http 網路協定提交推送到 Github 雲端主機? (為什麼要將資料存在雲端?能不能直接在雲端上編寫 Brython 程式?然後將程式存)</p>
<p>A4.</p>
<h2>W14</h2>
<div>
<div>已知 <a href="https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a0be253dc36fb3d0d2e1878950dae0b13d07a8f6/2022_1208_cp_w14_1b_quiz.json" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a0be253dc36fb3d0d2e1878950dae0b13d07a8f6/2022_1208_cp_w14_1b_quiz.json">w14 1b 計算機程式抽考成績的 json 檔案</a>, 請在個人網站中的 HW (H1) 頁面下的 w14 (H2) 頁面中以 Brython 程式列出缺考人員名單.<a href="https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a48d36ae883bde8efd07b25bfddaed8f13200353/2022_1209_cp_w14_1a_quiz.json" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a48d36ae883bde8efd07b25bfddaed8f13200353/2022_1209_cp_w14_1a_quiz.json">w14 1a quiz.json</a></div>
<div>
<div>參考資料:<a href="https://teams.microsoft.com/l/message/19:e34839ce9d16476184e0a0f1ea011415@thread.tacv2/1668566938222?tenantId=e650a2d7-e923-45bb-8fa6-1af5b0f72f09&amp;groupId=80d5bdeb-f306-4937-b63e-1e4c0b842936&amp;parentMessageId=1668566938222&amp;teamName=cp2022&amp;channelName=w11&amp;createdTime=1668566938222&amp;allowXTenantAccess=false" internal-url="" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://teams.microsoft.com/l/message/19:e34839ce9d16476184e0a0f1ea011415@thread.tacv2/1668566938222?tenantid=e650a2d7-e923-45bb-8fa6-1af5b0f72f09&amp;groupid=80d5bdeb-f306-4937-b63e-1e4c0b842936&amp;parentmessageid=1668566938222&amp;teamname=cp2022&amp;channelname=w11&amp;createdtime=1668566938222&amp;allowxtenantaccess=false">w11 教學內容</a>.<a href="https://mde.tw/content/Python.html?src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/f7a62d775c6c2b7e7e187acbb95efa51ba08853f/giving_cname_json_url_get_score.py" rel="noreferrer noopener" tabindex="-1" target="_blank" title="https://mde.tw/content/python.html?src=https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/f7a62d775c6c2b7e7e187acbb95efa51ba08853f/giving_cname_json_url_get_score.py">輸入班級代號與考試 json 連結列出缺考名單</a> </div>
<div>
<div></div>
<div><span style="background-color: #ffffff; color: #ff0000;"><a href="https://mdecp2022.github.io/site-40923149r/content/Brython.html?src=https://gist.githubusercontent.com/40923149r/3e6d269e16dfb9cc467728b472e6e72d/raw/35a8afac0178e68d35e5d87caadf77a520bd7787/w14" style="background-color: #ffffff; color: #ff0000;">整理出W14考試成績</a></span></div>
<div>考試成績是從最低分至最高分排序</div>
<div>
<pre class="brush:py;auto-links:false;toolbar:false" contenteditable="false"># 導入 ast 模組是希望利用其 literal_eval() 將 dict 格式的字串轉為 dict 資料型別
# 以利隨後的取值運算
import ast
# 設計一個 quiz 類別, 其中有兩個成員變數與兩個成員函式
class quiz:
    def __init__(self, cname, url):
        self.cname = cname
        self.url = url
    # 定義一個函式, 以班級代號字串作為輸入, 可以傳回各班修課學員的學號數列
    def get_stud(self):
        # 將課程的班級代號字串作為 dict 的 key, 而 2022 fall 的課程代號作為對應值
        # 使用者可以利用班級代號從 courses dict 取出課程代號
        courses = {"1a": "0747", "1b": "0761", "2a": "0773", "2b": "0786"}
        # 利用 c_name 從 courses 得到該學期的課程代號
        c = courses[self.cname]
        # 利用課程代號從學校教務主機取的該班修課人員名單
        curl = "https://nfu.cycu.org/?semester=1111&amp;courseno=" + c + "&amp;column=True"
        # 讀出各修課人員資料後, 以跳行符號切割, 得到的 data 為數列
        data = open(curl).read().split("\n")
        # 因為最後一筆資料為空字串, 因此利用數列運算將其去除
        stud = data[:-1]
        # get_stud() 函式最後將對應班級的修課人員學號以數列格式傳回
        return stud
         
    def get_score(self):
        # 利用 open() 與 read() 讀取考試結果 JSON 檔案
        json_data = open(self.url).read()
        # 利用 ast.literal_eval() 將字串 dict, 轉為程式可用的 dict 資料型別
        big_dict = ast.literal_eval(json_data)
        # 從 big_dict 中, 取出 body 中的 testuser 欄位資料
        data = big_dict["body"]["testuser"]
        # 定義一個空 dict 資料變數, 隨後利用迴圈逐一將學號作為 key, 考試成績為 valude
        # 組成 quiz_dict 的資料內容, 以便之後可以用學號當作輸入, 取得該員考試成績
        quiz_dict = {}
        for i in data:
            # data 資料中的 user_name 為考試學員的帳號, 也就是學號
            stud_id = data[i]["user_name"]
            # data 資料中的 total_score 欄位為考試成績
            # 因為考試成績為字串, 先轉為浮點數後, 再轉為整數
            stud_score = int(float(data[i]["total_score"]))
            # 逐一以學號為 key, 考試成績為對應 value, 將資料放入 quiz_dict
            quiz_dict[stud_id] = stud_score
        # 取得各學員的考試成績 quiz_dict 後, 將資料傳回
        return quiz_dict
url = "https://gist.githubusercontent.com/mdecycu/9df4b372ac1b7386cf259ced15f1a2b2/raw/a48d36ae883bde8efd07b25bfddaed8f13200353/2022_1209_cp_w14_1a_quiz.json"
cpb_w14 = quiz("1a", url)
# 利用 "1b" 作為輸入從 get_stud() 取出該班修課學員學號數列
cp_stud = cpb_w14.get_stud()
cp_score = cpb_w14.get_score()
print(cp_score)</pre>
</div>
</div>
</div>
</div>
<h2>W15</h2>
<p><span>Q1:為何學習計算機程式需要建立個人倉儲?</span><br/><br/><span>Q2:全球資訊網能夠提供甚麼功能或有什麼優點?</span><br/><br/><span>Q3:Replit, stud.cycu.org 與 localhost 分別代表甚麼?</span><br/><br/><span>Q4:https, ssh 到底提供使用者那些功能或優點?</span><br/><br/><span>Q5:Brython 與 Python 有甚麼差別?</span><br/><br/><span>Q6:能夠直接在瀏覽器中以 Brython 繪製中華民國國旗, 或模擬綠色方塊在方塊格點中任意移動, 代表甚麼?</span><br/><br/><span>Q7:變數, 字串, 整數, 浮點數, 數列, Tuple, Dictionary, 函式, 重複迴圈, class, 物件導向, 資料庫, 這些名詞對您而言代表甚麼?</span></p>
<h1>Brython</h1>
<p><a href="https://en.wikipedia.org/wiki/Python_(programming_language)">https://en.wikipedia.org/wiki/Python_(programming_language)</a></p>
<h4>Examples:</h4>
<p style="padding-left: 30px;"><a href="https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d">https://gist.github.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d</a></p>
<p style="padding-left: 30px;"><a href="https://www.geeksforgeeks.org/python-programming-examples/">https://www.geeksforgeeks.org/python-programming-examples/</a></p>
<p style="padding-left: 30px;"><a href="https://www.programiz.com/python-programming/examples">https://www.programiz.com/python-programming/examples</a></p>
<p style="padding-left: 30px;"><a href="https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/">https://www.freecodecamp.org/news/python-code-examples-sample-script-coding-tutorial-for-beginners/</a></p>
<h4>Python Tutorial:</h4>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/">https://docs.python.org/3/tutorial/</a></p>
<p style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/introduction.html">An informal introduction to Python</a></p>
<h4>Indentation</h4>
<h4>Variables</h4>
<h4>Comments</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#numbers">Numbers</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#strings">Strings</a></h4>
<h4>print</h4>
<p><a href="https://docs.python.org/3/tutorial/controlflow.html">Python control flow tools</a></p>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#for-statements">for</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#if-statements">if</a></h4>
<h4 style="padding-left: 30px;"><a href="https://docs.python.org/3/tutorial/controlflow.html#the-range-function">range</a></h4>
<h4>open</h4>
<h4>read</h4>
<h4><a href="https://docs.python.org/3/tutorial/introduction.html#lists">lists</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#tuples-and-sequences">tuples</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/datastructures.html#dictionaries">dictionaries</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#defining-functions">functions</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/errors.html#exceptions">try ... except</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#break-and-continue-statements-and-else-clauses-on-loops">break</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/controlflow.html#pass-statements">pass</a></h4>
<h4><a href="https://docs.python.org/3/tutorial/classes.html?highlight=classes">classes</a></h4>
<p>這個頁面 demo 如何在同一頁面下納入多個線上 Ace 編輯器與執行按鈕 (<a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件).</p>
<p><a href="/downloads/practice_html.txt">practice_html.txt</a> 動態頁面超文件應該可以在啟動 Brython 時, 設定將 .py 檔案放入 downloads/py 目錄中引用.</p>
<p>亦即將所有對應的 html 也使用 Brython 產生, 然後寫為 <a href="https://docs.python.org/3/tutorial/classes.html">class</a> 後, 在範例導入時透過 <a href="https://docs.python.org/3/tutorial/classes.html#instance-objects">instance</a> 引用.</p>
<pre class="brush:html;auto-links:false;toolbar:false" contenteditable="false">&lt;!-- 啟動 Brython --&gt;
&lt;script&gt;
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
&lt;/script&gt;</pre>
<p>從 1 累加到 100:</p>
<p><button id="add1to100">1 add to 100</button></p>
<p>將 iterable 與 iterator <a href="https://home.gamer.com.tw/creationDetail.php?sn=4337438">相關說明</a>, 利用 Brython 與 Ace Editor 整理在這個頁面.</p>
<!-- 導入 brython 程式庫 -->
<p>
<script src="/static/brython.js"></script>
<script src="/static/brython_stdlib.js"></script>
</p>
<!-- 啟動 Brython -->
<p>
<script>
window.onload=function(){
brython({debug:1, pythonpath:['/static/','./../downloads/py/']});
}
</script>
</p>
<p><!-- 導入 FileSaver 與 filereader --></p>
<p>
<script src="/static/ace/FileSaver.min.js" type="text/javascript"></script>
<script src="/static/ace/filereader.js" type="text/javascript"></script>
</p>
<p><!-- 導入 ace --></p>
<p>
<script src="/static/ace/ace.js" type="text/javascript"></script>
<script src="/static/ace/ext-language_tools.js" type="text/javascript"></script>
<script src="/static/ace/mode-python3.js" type="text/javascript"></script>
<script src="/static/ace/snippets/python.js" type="text/javascript"></script>
</p>
<p><!-- 導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫 -->
<script src="/static/Cango-24v03-min.js"></script>
<script src="/static/gearUtils-09.js"></script>
<script src="/static/SVGpathUtils-6v03-min.js"></script>
<script src="/static/sylvester.js"></script>
<script src="/static/PrairieDraw.js"></script>
</p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/javascript">
function doSave(storage_id, filename){
    var blob = new Blob([localStorage[storage_id]], {type: "text/plain;charset=utf-8"});
    filename = document.getElementById(filename).value
    saveAs(blob, filename+".py");
}
</script>
</p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()
Ace1 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run1():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace1.editor.setValue(prog)
    Ace1.editor.scrollToRow(0)
    Ace1.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace1.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run1'].bind('click', Ace1.run)
doc['kw_show_console1'].bind('click', Ace1.show_console)
doc['kw_clear_console1'].bind('click', Ace1.clear_console)
doc['clear_bd1'].bind('click', clear_bd1)
# 呼叫函式執行
run1()
</script>
</p>
<p><!-- add 1 to 100 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd1(ev):
    bd = doc["brython_div1"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace2 = ace.Editor(editor_id="kw_editor1", console_id="kw_console1", container_id="kw__container1", storage_id="kw_py_src1" )

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add(ev):
    Ace2.editor.setValue(add_src)
    Ace2.editor.scrollToRow(0)
    Ace2.editor.gotoLine(0)
    Ace2.run()

# id 為 "add1to100" 的按鈕點按時, 執行 add 方法
doc["add1to100"].bind('click', add)
</script>
</p>
<p><!-- add 1 to 100 結束--></p>
<!-- editor1 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor1" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src1', 'kw_filename1');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run1">Run</button> <button id="kw_show_console1">Output</button> <button id="kw_clear_console1">清除輸出區</button><button id="clear_bd1">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console1"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div1"></div>
<!-- editor1 結束 --><hr/><!-- ########################################## -->
<p>從 1 累加到 100 part2:</p>
<p><button id="add1to100part2">1 add to 100</button><button id="cango_three_gears">cango_three_gears</button><button id="bsnake">BSnake</button><button id="aitetris">AI Tetris</button></p>
<p><!-- 請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱--></p>
<p>
<script type="text/python3">
from browser import document as doc
import ace
# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()
Ace3 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )
# 從 gist 取出程式碼後, 放入 editor 作為 default 程式
def run2():
    # 利用 get 取下 src 變數值
    try:
        url = doc.query["src2"]
    except:
        url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c3a6deaf717f8f2739a4b1392a5ab10936e9693a/from_1_add_to_10_1.py"
    prog = open(url).read()

    # 將程式載入編輯區
    Ace3.editor.setValue(prog)
    Ace3.editor.scrollToRow(0)
    Ace3.editor.gotoLine(0)
    # 直接執行程式
    #ns = {'__name__':'__main__'}
    #exec(prog, ns)
    # 按下 run 按鈕
    Ace3.run()

# 執行程式, 顯示輸出結果與清除輸出結果及對應按鈕綁定
doc['kw_run2'].bind('click', Ace3.run)
doc['kw_show_console2'].bind('click', Ace3.show_console)
doc['kw_clear_console2'].bind('click', Ace3.clear_console)
doc['clear_bd2'].bind('click', clear_bd2)
# 呼叫函式執行
run2()
</script>
</p>
<p><!-- add 1 to 100 part2 開始 -->
<script type="text/python3">
from browser import document as doc
import ace

# 清除畫布
def clear_bd2(ev):
    bd = doc["brython_div2"]
    bd.clear()

# 利用 ace 中的 Editor 建立 Ace2 物件, 其中的輸入變數分別對應到頁面中的編輯區物件
Ace4 = ace.Editor(editor_id="kw_editor2", console_id="kw_console2", container_id="kw__container2", storage_id="kw_py_src2" )

# 透過 Ace4 以類別建立一個通用的 button2, 可以在多個案例中將 gist 程導入編輯區

class button2:
    def __init__(self, url):
        self.url = url

    # 記得加入 event 輸入變數
    def do(self,ev):
        Ace4.editor.setValue(open(self.url).read())
        Ace4.editor.scrollToRow(0)
        Ace4.editor.gotoLine(0)
        Ace4.run()

add1to100_url = "https://gist.githubusercontent.com/mdecourse/0229a8a017091476a79700b8a190f185/raw/c48e37714f055c3a0027cbfef59e442a6ef659b9/from_1_add_to_100_1.py"

# 從 gist 取得程式碼
add_src = open(add1to100_url).read()
def add2(ev):
    Ace4.editor.setValue(add_src)
    Ace4.editor.scrollToRow(0)
    Ace4.editor.gotoLine(0)
    Ace4.run()

# id 為 "add1to100part2" 的按鈕點按時, 執行 add 方法
doc["add1to100part2"].bind('click', add2)
# 以下為運用 button2 class 的通用 gist 程式導入區
################################## cango_three_gears start
cango_three_gears_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/cango_three_gears_brython_div2.py"
cango_three_gears = button2(cango_three_gears_url)
doc["cango_three_gears"].bind("click", cango_three_gears.do)
################################## cango_three_gears end
################################## bsnake start
bsnake_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/kmol_snakey.py"
bsnake = button2(bsnake_url)
doc["bsnake"].bind("click", bsnake.do)
################################## bsnake end
################################## aitetris start
aitetris_url = "https://gist.githubusercontent.com/mdecycu/d9082d678096bd58378d6afe2c7fa05d/raw/f7a85d737d6723d5e34c526d5daee990ed92c32b/pygame_to_brython_tetris_ai.py"
aitetris = button2(aitetris_url)
doc["aitetris"].bind("click", aitetris.do)
################################## aitetris end
</script>
</p>
<p><!-- add 1 to 100 part2 結束--></p>
<!-- editor2 開始 -->
<p><!-- 用來顯示程式碼的 editor 區域 --></p>
<div id="kw_editor2" style="width: 600px; height: 300px;"></div>
<p><!-- 以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合 --></p>
<p><!-- 存擋表單開始 --></p>
<form><label>Filename: <input id="kw_filename2" placeholder="input file name" type="text"/>.py</label> <input onclick="doSave('kw_py_src2', 'kw_filename2');" type="submit" value="Save"/></form>
<p><!-- 存擋表單結束 --></p>
<p></p>
<p><!-- 執行與清除按鈕開始 --></p>
<p><button id="kw_run2">Run</button> <button id="kw_show_console2">Output</button> <button id="kw_clear_console2">清除輸出區</button><button id="clear_bd2">清除繪圖區</button><button onclick="window.location.reload()">Reload</button></p>
<p><!-- 執行與清除按鈕結束 --></p>
<p></p>
<p><!-- 程式執行 ouput 區 --></p>
<div style="width: 100%; height: 100%;"><textarea autocomplete="off" id="kw_console2"></textarea></div>
<p><!-- Brython 程式執行的結果, 都以 brython_div1 作為切入位置 --></p>
<div id="brython_div2"></div>
<!-- editor2 結束 --><hr/></div>
</div>
</div>
</div>